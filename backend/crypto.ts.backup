import bcrypt from 'bcryptjs';
import crypto from 'crypto';

// Générer une clé secrète sécurisée
export const generateSecretKey = (): string => {
  return crypto.randomBytes(64).toString('hex');
};

// Hasher un mot de passe
export const hashPassword = async (password: string): Promise<string> => {
  const salt = await bcrypt.genSalt(12);
  return bcrypt.hash(password, salt);
};

// Vérifier un mot de passe
export const verifyPassword = async (password: string, hash: string): Promise<boolean> => {
  return bcrypt.compare(password, hash);
};

// Générer un token sécurisé
export const generateToken = (): string => {
  return crypto.randomBytes(32).toString('hex');
};

// Valider une URL
export const isValidUrl = (url: string): boolean => {
  try {
    new URL(url);
    return true;
  } catch {
    return false;
  }
};

// Nettoyer une chaîne pour éviter les injections SQL
export const sanitizeString = (str: string): string => {
  return str.replace(/[^a-zA-Z0-9\s\-_.]/g, '');
};
